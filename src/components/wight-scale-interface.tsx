"use client"

import { useState, useEffect } from "react"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Card } from "@/components/ui/card"

export default function WeighingScaleInterface() {
  const [weight, setWeight] = useState(1.1)
  const [vehicleNumber, setVehicleNumber] = useState("SPMKM61610000080923")
  const [location, setLocation] = useState("GUDANG BULKING")
  const [status, setStatus] = useState("Generated By System")
  const [isWeighing, setIsWeighing] = useState(false)
  const [namaTermath, setNamaTermath] = useState("")

  // Simulate weight sensor readings
  useEffect(() => {
    const interval = setInterval(() => {
      if (isWeighing) {
        setWeight((prev) => prev + (Math.random() - 0.5) * 0.1)
      }
    }, 1000)

    return () => clearInterval(interval)
  }, [isWeighing])

  const handleSave = () => {
    console.log("Saving weight data:", { weight, vehicleNumber, location, namaTermath })
    alert("Data berhasil disimpan!")
  }

  const handlePrint = () => {
    console.log("Printing weight data:", { weight, vehicleNumber, location, namaTermath })
    alert("Data sedang dicetak!")
  }

  const handleReset = () => {
    setWeight(0)
    setVehicleNumber("")
    setLocation("GUDANG BULKING")
    setStatus("Ready for weighing")
    setNamaTermath("")
  }

  const startWeighing = () => {
    setIsWeighing(true)
    setStatus("Weighing in progress...")
  }

  const stopWeighing = () => {
    setIsWeighing(false)
    setStatus("Weighing completed")
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-600 to-blue-800">
      {/* Header */}
      <header className="bg-blue-700 px-6 py-4 shadow-lg">
        <div className="flex items-center justify-between">
          <div className="flex items-center space-x-4">
            <div className="bg-green-500 px-4 py-2 rounded-lg font-bold text-white">GATE IN</div>
            <div className="text-white text-sm">Weighing System</div>
          </div>

          <div className="flex items-center space-x-4">
            <Input placeholder="Search / Gate Code" className="w-64 bg-white" />
            <Button variant="secondary" size="sm">
              Search
            </Button>
            <Button variant="secondary" size="sm">
              Support
            </Button>
            <Button variant="secondary" size="sm">
              Logout
            </Button>
          </div>
        </div>
      </header>

      <div className="flex h-[calc(100vh-80px)]">
        {/* Main Content Area */}
        <div className="flex-1 p-6">
          {/* Weight Display */}
          <div className="bg-green-500 rounded-lg p-6 mb-6 shadow-lg">
            <div className="flex items-center justify-between">
              <div>
                <div className="text-white text-4xl font-bold">{weight.toFixed(1)} TON</div>
                <div className="text-green-100 text-sm mt-1">Current Weight</div>
              </div>
              <div className="flex space-x-2">
                <Button
                  onClick={startWeighing}
                  disabled={isWeighing}
                  className="bg-yellow-500 hover:bg-yellow-600 text-black font-semibold"
                >
                  {isWeighing ? "Weighing..." : "Start"}
                </Button>
                <Button onClick={stopWeighing} disabled={!isWeighing} variant="secondary">
                  Stop
                </Button>
              </div>
            </div>
          </div>

          {/* Camera/Display Area */}
          <Card className="bg-white p-6 h-96 flex items-center justify-center">
            <div className="text-center text-gray-500">
              <div className="w-24 h-24 bg-gray-200 rounded-full mx-auto mb-4 flex items-center justify-center">
                <svg className="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth={2}
                    d="M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z"
                  />
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth={2}
                    d="M15 13a3 3 0 11-6 0 3 3 0 016 0z"
                  />
                </svg>
              </div>
              <p className="text-lg">Camera Feed / Vehicle Display</p>
              <p className="text-sm">Live view of weighing area</p>
            </div>
          </Card>
        </div>

        {/* Right Sidebar */}
        <div className="w-80 bg-blue-700 p-6 text-white">
          <div className="space-y-6">
            {/* Vehicle Information */}
            <div>
              <label className="text-blue-200 text-sm block mb-2">No. SPMK</label>
              <Input
                value={vehicleNumber}
                onChange={(e) => setVehicleNumber(e.target.value)}
                className="bg-blue-600 border-blue-500 text-white placeholder-blue-300"
                placeholder="Vehicle Number"
              />
            </div>

            <div>
              <label className="text-blue-200 text-sm block mb-2">Lokasi</label>
              <div className="bg-blue-600 p-3 rounded border border-blue-500">
                <div className="font-semibold">{location}</div>
              </div>
            </div>

            <div>
              <label className="text-blue-200 text-sm block mb-2">Status</label>
              <div className="bg-blue-600 p-3 rounded border border-blue-500">
                <div className="text-sm">{status}</div>
              </div>
            </div>

            <div>
              <label className="text-blue-200 text-sm block mb-2">Nomor Polisi</label>
              <Input
                className="bg-blue-600 border-blue-500 text-white placeholder-blue-300"
                placeholder="License Plate"
              />
            </div>

            <div>
              <label className="text-blue-200 text-sm block mb-2">Nama Tertagih</label>
              <Input
                value={namaTermath}
                onChange={(e) => setNamaTermath(e.target.value)}
                className="bg-blue-600 border-blue-500 text-white placeholder-blue-300"
                placeholder="Nama Tertagih"
              />
            </div>

            <div>
              <label className="text-blue-200 text-sm block mb-2">Berat In</label>
              <div className="bg-blue-600 p-3 rounded border border-blue-500 flex justify-between items-center">
                <span>{weight.toFixed(1)}</span>
                <Button size="sm" variant="secondary">
                  Edit
                </Button>
              </div>
            </div>

            {/* Weight History */}
            <div>
              <label className="text-blue-200 text-sm block mb-2">Riwayat Timbang</label>
              <div className="bg-blue-600 p-3 rounded border border-blue-500 space-y-2">
                <div className="flex justify-between text-sm">
                  <span>Timbang 1:</span>
                  <span>1.0 TON</span>
                </div>
                <div className="flex justify-between text-sm">
                  <span>Timbang 2:</span>
                  <span>{weight.toFixed(1)} TON</span>
                </div>
              </div>
            </div>
          </div>

          {/* Action Buttons */}
          <div className="mt-8 space-y-3">
            <Button onClick={handleSave} className="w-full bg-cyan-500 hover:bg-cyan-600 text-white font-semibold py-3">
              SIMPAN
            </Button>
            <Button onClick={handlePrint} className="w-full bg-green-500 hover:bg-green-600 text-white font-semibold py-3">
              CETAK
            </Button>
            <Button
              onClick={handleReset}
              className="w-full bg-orange-500 hover:bg-orange-600 text-white font-semibold py-3"
            >
              RESET
            </Button>
          </div>
        </div>
      </div>
    </div>
  )
}
